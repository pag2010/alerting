version: '3.4'

services:
  redis:
    image: redis/redis-stack
    container_name: 'redis-stack'
    ports:
      - 8001:8001
      - 6379:6379

  rabbitmq:
    image: masstransit/rabbitmq
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672

  alerting.producer:
    image: ${DOCKER_REGISTRY-}alertingproducer
    build:
      context: .
      dockerfile: Alerting.Producer/Dockerfile
    extra_hosts:
    - "host.docker.internal:host-gateway"
    ports:
      - "5000:80"

  alerting.consumer:
    image: ${DOCKER_REGISTRY-}alertingconsumer
    build:
      context: .
      dockerfile: Alerting.Consumer/Dockerfile
    ports:
      - "5001:80"


  alerting.controller:
    image: ${DOCKER_REGISTRY-}alertingcontroller
    build:
      context: .
      dockerfile: Alerting.Controller/Dockerfile
    ports:
      - "5002:80"

  alerting.alerting:
    image: ${DOCKER_REGISTRY-}alertingalerting
    build:
      context: .
      dockerfile: Alerting.Alerting/Dockerfile
    ports:
      - "5003:80"


  alerting.alertingruleconsumer:
    image: ${DOCKER_REGISTRY-}alertingalertingruleconsumer
    build:
      context: .
      dockerfile: Alerting.AlertingRuleConsumer/Dockerfile
    ports:
      - "5004:80"


  alerting.clientregistrationconsumer:
    image: ${DOCKER_REGISTRY-}alertingclientregistrationconsumer
    build:
      context: .
      dockerfile: Alerting.ClientRegistrationConsumer/Dockerfile
    ports:
      - "5005:80"


  cacheservice:
    image: ${DOCKER_REGISTRY-}cacheservice
    build:
      context: .
      dockerfile: CacheService/Dockerfile
    ports:
      - "5006:80"
